AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template AutoScalingMultiAZSample: Create a
  multi-az, load balanced and Auto Scaled sample web site running on an Apache
  Web Server with PHP. The application is configured to span all Availability
  Zones in the region. The instances are load balanced with a simple health check against
  the default web page. 
Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.micro
      - t2.small
      - t2.medium
    ConstraintDescription: must be a valid EC2 instance type.  
  PuppetServerIP:
    Description: ' The IP address range of the Puppet server. This enables the instance to contact Puppet server.'
    Type: String
    MinLength: '7'
    MaxLength: '15'
    Default: 0.0.0.0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})'
    ConstraintDescription: must be a valid IP address of the form x.x.x.x.
  PuppetServerHostname:
    Description: Puppet Server Hostname
    Type: String
    Default: puppet
    ConstraintDescription: Must be a valid puppet hostname.      
Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: PV64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
  AWSRegionArch2AMI:
    us-east-1:
      PV64: ami-1ccae774
      HVM64: ami-1ecae776
      HVMG2: ami-8c6b40e4
    us-west-2:
      PV64: ami-ff527ecf
      HVM64: ami-e7527ed7
      HVMG2: ami-abbe919b
    us-west-1:
      PV64: ami-d514f291
      HVM64: ami-d114f295
      HVMG2: ami-f31ffeb7
    eu-west-1:
      PV64: ami-bf0897c8
      HVM64: ami-a10897d6
      HVMG2: ami-d5bc24a2
    eu-central-1:
      PV64: ami-ac221fb1
      HVM64: ami-a8221fb5
      HVMG2: ami-7cd2ef61
    ap-northeast-1:
      PV64: ami-27f90e27
      HVM64: ami-cbf90ecb
      HVMG2: ami-6318e863
    ap-southeast-1:
      PV64: ami-acd9e8fe
      HVM64: ami-68d8e93a
      HVMG2: ami-3807376a
    ap-southeast-2:
      PV64: ami-ff9cecc5
      HVM64: ami-fd9cecc7
      HVMG2: ami-89790ab3
    sa-east-1:
      PV64: ami-bb2890a6
      HVM64: ami-b52890a8
      HVMG2: NOT_SUPPORTED
    cn-north-1:
      PV64: ami-fa39abc3
      HVM64: ami-f239abcb
      HVMG2: NOT_SUPPORTED
Resources:
  WebServerGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AvailabilityZones: !GetAZs ''
      LaunchConfigurationName: !Ref LaunchConfig
      MinSize: '2'
      MaxSize: '3'
      LoadBalancerNames:
        - !Ref ElasticLoadBalancer
    Metadata:
      'AWS::CloudFormation::Designer':
        id: f1891d9c-b11f-4a4d-82f6-dfe0e8795ccf
  LaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      KeyName: mysydneykeypair
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              yum update -y aws-cfn-bootstrap
            - |
              # Install the files and packages from the metadata
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource LaunchConfig '
            - '         --configsets All '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

            - |
              # Signal the status from cfn-init
            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WebServerGroup '
            - '         --region '
            - !Ref 'AWS::Region'
            - ''
      SecurityGroups:
        - !Ref InstanceSecurityGroup
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          All:
            - ConfigureSampleApp
            - httpconfig
            - puppetconfig
            - dbhostname
        ConfigureSampleApp:
          packages:
            yum:
              httpd: []
              php: []
              php-mysql: []
              puppet: []
          files:
            /var/www/html/index.php:
              content: !Join 
                - ''
                - - |
                    <html>
                  - |2
                      <head>
                  - |2
                        <title>This a page created for Stan Assesment</title>
                  - |2
                        <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
                  - |2
                      </head>
                  - |2
                      <body>
                  - |2
                        <h1>Welcome to the Tony's Page</h1>
                  - |2
                        <p/>
                  - |2
                        <?php
                  - |2
                          // Print out the current data and time
                  - |2
                          print "The Current Date and Time is: <br/>";
                  - |2
                          print date("g:i A l, F j Y.");
                  - |2
                        ?>
                  - |2
                        <p/>
                  - |2
                        <?php
                  - |2
                          // Setup a handle for CURL
                  - |2
                          $curl_handle=curl_init();
                  - |2
                          curl_setopt($curl_handle,CURLOPT_CONNECTTIMEOUT,2);
                  - |2
                          curl_setopt($curl_handle,CURLOPT_RETURNTRANSFER,1);
                  - |2
                          // Get the hostname of the instance from the instance metadata
                  - |2
                          curl_setopt($curl_handle,CURLOPT_URL,'http://169.254.169.254/latest/meta-data/public-hostname');
                  - |2
                          $hostname = curl_exec($curl_handle);
                  - |2
                          print "Server = " . $hostname . "<br />";
                  - |2
                          // Get the instance-id of the instance from the instance metadata
                  - |2
                          curl_setopt($curl_handle,CURLOPT_URL,'http://169.254.169.254/latest/meta-data/instance-id');
                  - |2
                          $instanceid = curl_exec($curl_handle);
                  - |2
                           print "EC2 instance-id = " . $instanceid . "<br />";
                  - |2
                          ?>
                  - |2
                          <?php
                  - |2
                          $database = "tonystan";
                  - |2
                          $username = "tonystan";
                  - |2
                          $password = "tonystan";
                  - |2
                          $server   = "dbservername";
                  - |2
                          $mysqlConnection = mysql_connect($server, $username, $password);
                  - |2
                          if (!$mysqlConnection)
                  - |2
                          {
                  - |2
                          print "Connection NOT Established. Please try later.";
                  - |2
                          }
                  - |2
                          else 
                  - |2
                          {
                  - |2     
                          print "Connection to MySQL is Established";
                  - |2     
                          }
                  - |2
                          ?>                  
                  - |2                  
                      </body>
                  - |
                    </html>
              mode: '000644'
              owner: root
              group: root
            /etc/httpd/conf.d/error.conf:
              content: ErrorDocument 404 /custom_404.html
              mode: '000644'
              owner: root
              group: root
            /var/www/html/custom_404.html:
              content: ' Recheck your URL'
              mode: '000644'
              owner: root
              group: root
        httpconfig:
          commands:
            configupdate:
              command: echo "$MAGIC" >> /etc/httpd/conf/httpd.conf
              env:
                MAGIC: Listen 443
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/httpd/conf/httpd.conf
        puppetconfig:
          commands:
            puppetagentconf:
              command: echo "server = $MAGIC" >> /etc/puppet/puppet.conf
              env:
                MAGIC: !Ref PuppetServerHostname
            hostsconf:
              command: echo "$MAGIC1 $MAGIC2" >> /etc/hosts
              env:
                MAGIC1: !Ref PuppetServerIP
                MAGIC2: !Ref PuppetServerHostname
        dbhostname:
              cwd: "/var/www/html"
              command: !Sub |
                sed -i 's/dbservername/${DataBase.Endpoint.Address}/g' index.php
      'AWS::CloudFormation::Designer':
        id: 0f900c9e-1272-4ec2-8a42-790b074baa39
  ElasticLoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      AvailabilityZones: !GetAZs ''
      Listeners:
        - LoadBalancerPort: '80'
          Protocol: HTTP
          InstancePort: '80'
          InstanceProtocol: HTTP
      HealthCheck:
        Target: 'HTTP:80/index.php'
        HealthyThreshold: '3'
        UnhealthyThreshold: '5'
        Interval: '30'
        Timeout: '10'
      CrossZone: 'true'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 0a97b02e-4288-4164-9579-85bc2f36f958
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP and HTTPS
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 85f0801e-9489-4d7d-a491-97e40add4225
  DataBase:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      AllocatedStorage: 5
      StorageType: gp2
      DBInstanceClass: db.t2.micro
      DBName: tonystan
      Engine: MySQL
      DBSecurityGroups:
       - Ref: DBSecurityGroup
      MasterUsername: tonystan
      MasterUserPassword: tonystan
  DBSecurityGroup:
    Type: 'AWS::RDS::DBSecurityGroup'
    Properties:
      GroupDescription: Frontend Access
      DBSecurityGroupIngress:
        EC2SecurityGroupName:
          Ref: InstanceSecurityGroup
Outputs:
  WebsiteURL:
    Value: !GetAtt 
      - ElasticLoadBalancer
      - DNSName
    Description: Elastic Load Balancer Domain
